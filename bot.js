const { Telegraf, Markup } = require('telegraf');
const { syncModels, User, Product, Purchase, Admin } = require('./models');
const fs = require('fs').promises;
const path = require('path');
require('dotenv').config();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const requiredEnvVars = ['BOT_TOKEN', 'DB_NAME', 'DB_USER', 'DB_PASSWORD', 'ADMIN_IDS'];
for (const envVar of requiredEnvVars) {
  if (!process.env[envVar]) {
    console.error(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${envVar}`);
    process.exit(1);
  }
}

const bot = new Telegraf(process.env.BOT_TOKEN);

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è Admin –ø–æ–∫—É–ø–æ–∫
const userStates = new Map();
// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂
const adminStates = new Map();

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
bot.use(async (ctx, next) => {
  console.log(`üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${ctx.from?.id}: ${ctx.message?.text || ctx.callbackQuery?.data}`);
  
  try {
    await next();
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    console.error(`‚ùå Stack: ${error.stack}`);
    await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// Middleware –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.use(async (ctx, next) => {
  if (ctx.from?.id) {
    try {
      const [user, created] = await User.findOrCreate({
        where: { telegramId: ctx.from.id },
        defaults: {
          telegramId: ctx.from.id,
          username: ctx.from.username,
          firstName: ctx.from.first_name,
          lastName: ctx.from.last_name
        }
      });

      if (created) {
        console.log(`üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ctx.from.id}`);
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        await sendAdminNotification(ctx, 
          `üÜï –ù–û–í–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù:\n\n` +
          `üë§ ID: ${ctx.from.id}\n` +
          `üì± Username: @${escapeMarkdown(ctx.from.username) || '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n` +
          `üè∑Ô∏è –ò–º—è: ${escapeMarkdown(ctx.from.first_name) || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`
        );
      } else {
        await user.update({ lastActivity: new Date() });
      }

      ctx.user = user;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
  }
  
  return next();
});

// –§—É–Ω–∫—Ü–∏—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è Markdown
function escapeMarkdown(text) {
  if (!text) return text;
  return text.toString()
    .replace(/\\/g, '\\\\')
    .replace(/\*/g, '\\*')
    .replace(/_/g, '\\_')
    .replace(/\[/g, '\\[')
    .replace(/\]/g, '\\]')
    .replace(/\(/g, '\\(')
    .replace(/\)/g, '\\)')
    .replace(/~/g, '\\~')
    .replace(/`/g, '\\`')
    .replace(/>/g, '\\>')
    .replace(/#/g, '\\#')
    .replace(/\+/g, '\\+')
    .replace(/-/g, '\\-')
    .replace(/=/g, '\\=')
    .replace(/\|/g, '\\|')
    .replace(/\{/g, '\\{')
    .replace(/\}/g, '\\}')
    .replace(/\./g, '\\.')
    .replace(/!/g, '\\!');
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
async function sendAdminNotification(ctx, message, options = {}, showConfirmButton = false, buyerId = null) {
  const adminIds = process.env.ADMIN_IDS.split(',');
  console.log(`üì§ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${adminIds.length} –∞–¥–º–∏–Ω–∞–º: ${adminIds.join(', ')}`);
  
  let successCount = 0;
  let failureCount = 0;
  
  for (const adminId of adminIds) {
    const trimmedAdminId = adminId.trim();
    try {
      console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ${trimmedAdminId}...`);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      let messageOptions = {
        parse_mode: 'Markdown',
        ...options
      };

      if (showConfirmButton && buyerId) {
        messageOptions.reply_markup = {
          inline_keyboard: [[
            { text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É', callback_data: `confirm_purchase_${buyerId}` }
          ]]
        };
      }
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Å Markdown
      await ctx.telegram.sendMessage(trimmedAdminId, message, messageOptions);
      
      console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É ${trimmedAdminId}`);
      successCount++;
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É ${trimmedAdminId}:`);
      console.error(`   –ö–æ–¥ –æ—à–∏–±–∫–∏: ${error.code}`);
      console.error(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${error.description}`);
      console.error(`   –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: ${error.parameters ? JSON.stringify(error.parameters) : '–Ω–µ—Ç'}`);
      
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Markdown, –ø–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      if (error.code === 400 && error.description.includes('parse entities')) {
        try {
          console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—É ${trimmedAdminId}...`);
          
          // –£–±–∏—Ä–∞–µ–º –≤—Å–µ Markdown —Å–∏–º–≤–æ–ª—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
          const plainMessage = message.replace(/\*\*/g, '').replace(/\*/g, '').replace(/`/g, '').replace(/\_/g, '');
          
          let plainOptions = { ...options };
          if (showConfirmButton && buyerId) {
            plainOptions.reply_markup = {
              inline_keyboard: [[
                { text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É', callback_data: `confirm_purchase_${buyerId}` }
              ]]
            };
          }
          
          await ctx.telegram.sendMessage(trimmedAdminId, plainMessage, plainOptions);
          
          console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–¥–º–∏–Ω—É ${trimmedAdminId}`);
          successCount++;
          
        } catch (retryError) {
          console.error(`‚ùå –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å –∞–¥–º–∏–Ω—É ${trimmedAdminId}:`, retryError.description);
          failureCount++;
        }
      } else {
        failureCount++;
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        if (error.code === 403) {
          console.error(`   üö´ –ê–¥–º–∏–Ω ${trimmedAdminId} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ –∏–ª–∏ –Ω–µ –Ω–∞—á–∏–Ω–∞–ª –¥–∏–∞–ª–æ–≥`);
        } else if (error.code === 400) {
          console.error(`   ‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π ID –∞–¥–º–∏–Ω–∞ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º`);
        }
      }
    }
  }
  
  console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏: ${successCount} —É—Å–ø–µ—à–Ω–æ, ${failureCount} –æ—à–∏–±–æ–∫`);
  return { successCount, failureCount };
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å —É—á–µ—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function createMainMenu(userId) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—ã –∏–ª–∏ pending –ø–æ–∫—É–ø–∫–∏
    const hasActiveReservation = await Product.findOne({
      where: {
        reservedBy: userId,
        reservedUntil: { [require('sequelize').Op.gt]: new Date() }
      }
    });

    const hasPendingPurchase = await Purchase.findOne({
      where: {
        userId: userId,
        status: 'pending'
      }
    });

    const userState = userStates.get(userId);
    const hasAdminProcess = userState && (userState.state === 'admin_list_sent' || userState.state === 'admin_file_sent');
    const hasShopProcess = userState && (userState.state === 'shop_list_sent' || userState.state === 'shop_file_sent');

    const buttons = [
      [Markup.button.callback('üõçÔ∏è –ö—É–ø–∏—Ç—å Shop', 'buy_shop')],
      [Markup.button.callback('üë®‚Äçüíº –ö—É–ø–∏—Ç—å Admin', 'buy_admin')],
      [Markup.button.callback('‚úçÔ∏è –ö—É–ø–∏—Ç—å Authors', 'buy_authors')],
      [Markup.button.callback('üìà –ü–æ–∫—É–ø–∫–∏ SEO', 'seo_menu')],
      [Markup.button.callback('üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', 'profile')]
    ];

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–∫—É–ø–∫–∞
    if (hasActiveReservation || hasPendingPurchase || hasAdminProcess || hasShopProcess) {
      buttons.push([Markup.button.callback('üí∞ –¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω', 'purchase_completed')]);
    }

    buttons.push([Markup.button.callback('üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'support')]);

    return Markup.inlineKeyboard(buttons);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:', error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤–æ–µ –º–µ–Ω—é –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    return Markup.inlineKeyboard([
      [Markup.button.callback('üõçÔ∏è –ö—É–ø–∏—Ç—å Shop', 'buy_shop')],
      [Markup.button.callback('üë®‚Äçüíº –ö—É–ø–∏—Ç—å Admin', 'buy_admin')],
      [Markup.button.callback('‚úçÔ∏è –ö—É–ø–∏—Ç—å Authors', 'buy_authors')],
      [Markup.button.callback('üìà –ü–æ–∫—É–ø–∫–∏ SEO', 'seo_menu')],
      [Markup.button.callback('üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', 'profile')],
      [Markup.button.callback('üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'support')]
    ]);
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞ - —Å–∫—Ä—ã—Ç–∏–µ –ª–æ–≥–∏–Ω–æ–≤/–ø–∞—Ä–æ–ª–µ–π
function processFileLines(fileContent, hideCredentials = true) {
  const lines = fileContent.split('\n').filter(line => line.trim());
  
  if (!hideCredentials) {
    return lines; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å –ª–æ–≥–∏–Ω–∞–º–∏/–ø–∞—Ä–æ–ª—è–º–∏
  }
  
  // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–≥–∏–Ω—ã/–ø–∞—Ä–æ–ª–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é
  return lines.map(line => {
    const parts = line.split(':');
    if (parts.length >= 4) {
      // –ë–µ—Ä–µ–º URL (–ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å) –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö (–≤—Å–µ –ø–æ—Å–ª–µ 3-–≥–æ –¥–≤–æ–µ—Ç–æ—á–∏—è)
      const url = parts[0];
      const ordersInfo = parts.slice(3).join(':');
      return `${url} ${ordersInfo}`;
    }
    return line; // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  });
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ
function findLinesInFile(fileContent, selectedLines) {
  const fullLines = fileContent.split('\n').filter(line => line.trim());
  const processedLines = processFileLines(fileContent, true);
  const foundLines = [];
  
  selectedLines.forEach(selectedLine => {
    const selectedTrimmed = selectedLine.trim();
    const index = processedLines.findIndex(processedLine => 
      processedLine.trim() === selectedTrimmed
    );
    
    if (index !== -1) {
      foundLines.push({
        original: fullLines[index],
        processed: processedLines[index],
        index: index
      });
    }
  });
  
  return foundLines;
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫ –∏–∑ —Ñ–∞–π–ª–∞
async function removeServerLinesFromFile(filePath, linesToRemove) {
  try {
    const fileContent = await fs.readFile(filePath, 'utf8');
    const lines = fileContent.split('\n').filter(line => line.trim());
    
    // –£–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    const remainingLines = lines.filter(line => 
      !linesToRemove.some(removeIndex => lines[removeIndex] === line)
    );
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    await fs.writeFile(filePath, remainingLines.join('\n'), 'utf8');
    console.log(`üìù –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª ${filePath}, —É–¥–∞–ª–µ–Ω–æ ${linesToRemove.length} —Å—Ç—Ä–æ–∫`);
    
    return remainingLines.length;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error);
    throw error;
  }
}
function getUserStatus(weeklySpent) {
  if (weeklySpent >= 8000) return 'INFINITY';
  if (weeklySpent >= 5000) return 'PREMIUM';
  if (weeklySpent >= 2000) return 'VIP';
  return '–ü—ã–ª—å';
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
function getStatusProgress(weeklySpent) {
  if (weeklySpent >= 8000) {
    return { current: 'INFINITY', next: null, progress: 100, needed: 0 };
  } else if (weeklySpent >= 5000) {
    const progress = Math.round((weeklySpent - 5000) / 30); // 30 –¥–æ–ª–ª–∞—Ä–æ–≤ = 1%
    const needed = 8000 - weeklySpent;
    return { current: 'PREMIUM', next: 'INFINITY', progress: Math.min(progress, 99), needed };
  } else if (weeklySpent >= 2000) {
    const progress = Math.round((weeklySpent - 2000) / 30); // 30 –¥–æ–ª–ª–∞—Ä–æ–≤ = 1%
    const needed = 5000 - weeklySpent;
    return { current: 'VIP', next: 'PREMIUM', progress: Math.min(progress, 99), needed };
  } else {
    const progress = Math.round(weeklySpent / 20); // 20 –¥–æ–ª–ª–∞—Ä–æ–≤ = 1%
    const needed = 2000 - weeklySpent;
    return { current: '–ü—ã–ª—å', next: 'VIP', progress: Math.min(progress, 99), needed };
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
async function confirmSaleByAdmin(ctx, buyer, amount) {
  try {
    console.log(`üè™ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏ –∞–¥–º–∏–Ω–æ–º ${ctx.from.id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${buyer.telegramId} –Ω–∞ —Å—É–º–º—É $${amount}`);
    
    const newWeeklySpent = parseFloat(buyer.weeklySpent || 0) + amount;
    const newTotalSpent = parseFloat(buyer.totalSpent || 0) + amount;
    
    const oldStatus = buyer.status;
    const newStatus = getUserStatus(newWeeklySpent);
    const statusProgress = getStatusProgress(newWeeklySpent);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
    await buyer.update({
      weeklySpent: newWeeklySpent,
      totalSpent: newTotalSpent,
      status: newStatus
    });

    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Ä–µ–∑–µ—Ä–≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª—è + –û–¢–ö–õ–Æ–ß–ê–ï–ú –¢–û–í–ê–†
    userStates.delete(buyer.telegramId);
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –∫–æ—Ç–æ—Ä—ã–π –∫—É–ø–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –æ—Ç–∫–ª—é—á–∞–µ–º –µ–≥–æ
    const purchasedProduct = await Product.findOne({
      where: { reservedBy: buyer.telegramId }
    });
    
    if (purchasedProduct) {
      await purchasedProduct.update({
        isAvailable: false,  // –û–¢–ö–õ–Æ–ß–ê–ï–ú –¢–û–í–ê–† –ù–ê–í–°–ï–ì–î–ê
        reservedBy: null,
        reservedUntil: null
      });
      console.log(`üì¶ –¢–æ–≤–∞—Ä ${purchasedProduct.uniqueCode} –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏`);
    }
    
    // –°–Ω–∏–º–∞–µ–º —Ä–µ–∑–µ—Ä–≤—ã —Å –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
    await Product.update(
      { reservedBy: null, reservedUntil: null },
      { where: { reservedBy: buyer.telegramId } }
    );
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–∫—É–ø–∫–∏
    await Purchase.update(
      { status: 'confirmed', amount: amount, confirmedBy: ctx.from.id },
      { where: { userId: buyer.telegramId, status: 'pending' } }
    );

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
    let adminResponseText = `‚úÖ –ü–†–û–î–ê–ñ–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê!\n\n`;
    adminResponseText += `üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @${buyer.username || buyer.firstName} (ID: ${buyer.telegramId})\n`;
    adminResponseText += `üí∞ –°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂–∏: ${amount}\n`;
    
    if (purchasedProduct) {
      adminResponseText += `üì¶ –ü—Ä–æ–¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä: ${purchasedProduct.name} (${purchasedProduct.uniqueCode})\n`;
      adminResponseText += `üîí –°—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞: –û—Ç–∫–ª—é—á–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞\n`;
    }
    
    adminResponseText += `üìä –ù–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:\n`;
    adminResponseText += `üíé –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é: ${newWeeklySpent}\n`;
    adminResponseText += `üí∞ –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: ${newTotalSpent}\n`;
    adminResponseText += `üèÜ –°—Ç–∞—Ç—É—Å: ${newStatus}\n\n`;
    
    if (newStatus !== oldStatus) {
      adminResponseText += `üéâ –°—Ç–∞—Ç—É—Å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –ø–æ–≤—ã—à–µ–Ω —Å ${oldStatus} –¥–æ ${newStatus}!\n\n`;
    }
    
    adminResponseText += `–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–µ.`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ Markdown, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
    try {
      await ctx.reply(adminResponseText);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω—É:', error);
      await ctx.reply('‚úÖ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! (–æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è)');
    }

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
    try {
      let buyerResponseText = `‚úÖ –í–∞—à–∞ –ø–æ–∫—É–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!\n\n`;
      buyerResponseText += `üí∞ –°—É–º–º–∞: ${amount}\n`;
      buyerResponseText += `üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:\n`;
      buyerResponseText += `üíé –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é: ${newWeeklySpent}\n`;
      buyerResponseText += `üí∞ –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: ${newTotalSpent}\n`;
      buyerResponseText += `üèÜ –°—Ç–∞—Ç—É—Å: ${newStatus}\n\n`;
      
      if (newStatus !== oldStatus) {
        buyerResponseText += `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–≤—ã—à–µ–Ω –¥–æ ${newStatus}!\n\n`;
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
      if (statusProgress.next) {
        const progressBar = '‚ñì'.repeat(Math.floor(statusProgress.progress / 10)) + 
                           '‚ñë'.repeat(10 - Math.floor(statusProgress.progress / 10));
        buyerResponseText += `üìà –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ ${statusProgress.next}:\n`;
        buyerResponseText += `[${progressBar}] ${statusProgress.progress}%\n`;
        buyerResponseText += `üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å: ${statusProgress.needed}\n\n`;
      } else {
        buyerResponseText += `üëë –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞!\n\n`;
      }
      
      buyerResponseText += `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!`;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –º–µ–Ω—é (–±–µ–∑ Markdown)
      const buyerMenu = await createMainMenu(buyer.telegramId);
      await ctx.telegram.sendMessage(buyer.telegramId, buyerResponseText, {
        ...buyerMenu
      });

    } catch (buyerError) {
      console.error('–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:', buyerError);
      await ctx.reply(`‚ö†Ô∏è –ü—Ä–æ–¥–∞–∂–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è (ID: ${buyer.telegramId})`);
    }

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
    const adminIds = process.env.ADMIN_IDS.split(',');
    for (const adminId of adminIds) {
      const trimmedAdminId = adminId.trim();
      if (parseInt(trimmedAdminId) !== ctx.from.id) {
        try {
          await ctx.telegram.sendMessage(trimmedAdminId,
            `üí∞ –ü–†–û–î–ê–ñ–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê\n\n` +
            `üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${ctx.from.first_name || ctx.from.id}\n` +
            `üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @${buyer.username || buyer.firstName} (${buyer.telegramId})\n` +
            `üí∞ –°—É–º–º–∞: $${amount}\n` +
            `üèÜ –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: ${newStatus}\n` +
            `üìä –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: $${newTotalSpent}`
          );
        } catch (error) {
          console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ ${trimmedAdminId}`);
        }
      }
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ confirmSaleByAdmin:', error);
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∞–º
async function sendListToAdmins(ctx, productCode, listContent, listType, fileName = null, category = 'ADMIN') {
  console.log(`üìã –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∞–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.user.telegramId} (${category})...`);
  
  const categoryIcon = category === 'SHOP' ? 'üõçÔ∏è' : 'üìä';
  const categoryName = category === 'SHOP' ? 'SHOP' : 'ADMIN';
  
  let message = `üìã ${categoryIcon} –°–ü–ò–°–û–ö –û–¢ –ü–û–ö–£–ü–ê–¢–ï–õ–Ø - ${categoryName}\n\n`;
  message += `üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @${escapeMarkdown(ctx.user.username || ctx.user.firstName)}\n`;
  message += `üì± ID: ${ctx.user.telegramId}\n`;
  message += `üèÜ –°—Ç–∞—Ç—É—Å: ${ctx.user.status}\n`;
  message += `üîó –¢–æ–≤–∞—Ä: ${productCode}\n\n`;
  
  if (listType === 'file') {
    message += `üìÑ –¢–∏–ø: –§–∞–π–ª (${escapeMarkdown(fileName)})\n`;
  } else {
    message += `üìù –¢–∏–ø: –¢–µ–∫—Å—Ç –≤ —á–∞—Ç–µ\n`;
  }
  
  message += `üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ:\n${escapeMarkdown(listContent)}\n\n`;
  message += `üí¨ –î–µ–π—Å—Ç–≤–∏–µ: –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –¥–ª—è –æ–ø–ª–∞—Ç—ã`;

  await sendAdminNotification(ctx, message, {}, true, ctx.user.telegramId);
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
  const welcomeText = `üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!**

üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:**
‚Ä¢ **Shop** - –ì–æ—Ç–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—ã —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
‚Ä¢ **Admin** - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ —Å–∞–π—Ç–æ–≤  
‚Ä¢ **Authors** - –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –Ω–∞—Ä–∞–±–æ—Ç–∫–∏ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ **SEO** - –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ SEO –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã

üí∞ **–û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ:**
USDT (TRC20), BTC, ETH –∏ –¥—Ä—É–≥–∏–µ –ø–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—é

üèÜ **–°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤:**
‚Ä¢ **–ü—ã–ª—å** - –¥–æ $2000 –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ **VIP** - $2000+ –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ **PREMIUM** - $5000+ –≤ –Ω–µ–¥–µ–ª—é (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ)
‚Ä¢ **INFINITY** - $8000+ –≤ –Ω–µ–¥–µ–ª—é (–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å)

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:`;

  const mainMenu = await createMainMenu(ctx.user.telegramId);
  await ctx.reply(welcomeText, {
    ...mainMenu,
    parse_mode: 'Markdown'
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
bot.action('main_menu', async (ctx) => {
  try {
    const mainMenu = await createMainMenu(ctx.user.telegramId);
    await ctx.editMessageText(
      'üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:',
      {
        ...mainMenu,
        parse_mode: 'Markdown'
      }
    );
  } catch (error) {
    if (error.description && error.description.includes('message is not modified')) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –Ω–µ–∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      return;
    }
    console.error('–û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:', error);
  }
});

// ==================== –ö–û–ú–ê–ù–î–´ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í ====================

bot.command('admin_stats', async (ctx) => {
  const adminIds = process.env.ADMIN_IDS.split(',').map(id => parseInt(id));
  if (!adminIds.includes(ctx.from.id)) return;

  try {
    const totalUsers = await User.count();
    const totalProducts = await Product.count();
    const totalPurchases = await Purchase.count({ where: { status: 'confirmed' } });
    const pendingPurchases = await Purchase.count({ where: { status: 'pending' } });
    
    const revenue = await Purchase.sum('amount', { 
      where: { status: 'confirmed' } 
    }) || 0;

    const statsText = `üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:**

üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** ${totalUsers}
üì¶ **–¢–æ–≤–∞—Ä—ã:** ${totalProducts}  
‚úÖ **–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏:** ${totalPurchases}
‚è≥ **–û–∂–∏–¥–∞—é—â–∏–µ –ø–æ–∫—É–ø–∫–∏:** ${pendingPurchases}
üí∞ **–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞:** $${revenue}

üìÖ **–î–∞—Ç–∞:** ${new Date().toLocaleString('ru-RU')}`;

    await ctx.reply(statsText, { parse_mode: 'Markdown' });
  } catch (error) {
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º
bot.command('admin_test', async (ctx) => {
  const adminIds = process.env.ADMIN_IDS.split(',').map(id => parseInt(id));
  if (!adminIds.includes(ctx.from.id)) return;

  console.log(`üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–æ–º ${ctx.from.id}`);
  
  const testResult = await sendAdminNotification(ctx, 
    `üß™ –¢–ï–°–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô\n\n` +
    `‚úÖ –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.\n` +
    `üìÖ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\n` +
    `üë§ –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: ${ctx.from.id}`
  );

  await ctx.reply(
    `üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:**\n` +
    `‚úÖ –£—Å–ø–µ—à–Ω–æ: ${testResult.successCount}\n` +
    `‚ùå –û—à–∏–±–∫–∏: ${testResult.failureCount}`,
    { parse_mode: 'Markdown' }
  );
});

// –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
bot.command('sold', async (ctx) => {
  const adminIds = process.env.ADMIN_IDS.split(',').map(id => parseInt(id));
  if (!adminIds.includes(ctx.from.id)) return;

  await ctx.reply(
    `üí∞ **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏**\n\n` +
    `–£–∫–∞–∂–∏—Ç–µ ID –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ —Å—É–º–º—É –ø—Ä–æ–¥–∞–∂–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n` +
    `\`1234567890 500\`\n\n` +
    `–ì–¥–µ:\n` +
    `‚Ä¢ –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n` +
    `‚Ä¢ –í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ - —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂–∏ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö`,
    { parse_mode: 'Markdown' }
  );
  
  adminStates.set(ctx.from.id, {
    state: 'waiting_sale_confirmation'
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏
bot.on('text', async (ctx, next) => {
  const adminIds = process.env.ADMIN_IDS.split(',').map(id => parseInt(id));
  const isAdmin = adminIds.includes(ctx.from.id);
  const adminState = adminStates.get(ctx.from.id);
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏ –æ—Ç –∞–¥–º–∏–Ω–∞
  if (isAdmin && adminState && adminState.state === 'waiting_sale_confirmation') {
    const text = ctx.message.text.trim();
    const match = text.match(/^(\d+)\s+(\d+(?:\.\d{2})?)$/);
    
    if (match) {
      const buyerId = parseInt(match[1]);
      const amount = parseFloat(match[2]);
      
      try {
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const buyer = await User.findOne({ where: { telegramId: buyerId } });
        
        if (!buyer) {
          adminStates.delete(ctx.from.id);
          return ctx.reply(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${buyerId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.`);
        }
        
        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø—Ä–æ–¥–∞–∂—É
        await confirmSaleByAdmin(ctx, buyer, amount);
        adminStates.delete(ctx.from.id);
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏:', error);
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        adminStates.delete(ctx.from.id);
      }
    } else {
      await ctx.reply(
        `‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç**\n\n` +
        `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: \`ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É–º–º–∞\`\n` +
        `–ù–∞–ø—Ä–∏–º–µ—Ä: \`1234567890 500\``,
        { parse_mode: 'Markdown' }
      );
    }
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É"
  if (isAdmin && adminState && adminState.state === 'waiting_purchase_amount') {
    const text = ctx.message.text.trim();
    const amountMatch = text.match(/^(\d+(?:\.\d{2})?)$/);
    
    if (amountMatch) {
      const amount = parseFloat(amountMatch[1]);
      
      if (amount > 0) {
        try {
          // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const buyer = await User.findOne({ where: { telegramId: adminState.buyerId } });
          
          if (!buyer) {
            adminStates.delete(ctx.from.id);
            return ctx.reply(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${adminState.buyerId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.`);
          }
          
          // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø—Ä–æ–¥–∞–∂—É
          await confirmSaleByAdmin(ctx, buyer, amount);
          adminStates.delete(ctx.from.id);
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏:', error);
          await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
          adminStates.delete(ctx.from.id);
        }
      } else {
        await ctx.reply(
          `‚ùå **–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞**\n\n–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.`,
          { parse_mode: 'Markdown' }
        );
      }
    } else {
      await ctx.reply(
        `‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã**\n\n` +
        `–£–∫–∞–∂–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: \`500\` –∏–ª–∏ \`1250.50\``,
        { parse_mode: 'Markdown' }
      );
    }
    return;
  }
  
  // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  return next();
});

// ==================== SHOP –¢–û–í–ê–†–´ ====================

bot.action('buy_shop', async (ctx) => {
  try {
    const products = await Product.findAll({
      where: { category: 'SHOP', isAvailable: true },
      order: [['createdAt', 'DESC']]
    });

    if (products.length === 0) {
      return ctx.editMessageText(
        'üì≠ **–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Shop –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç**\n\n' +
        '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏—Ç –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã.',
        {
          reply_markup: { inline_keyboard: [[{ text: 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }]] },
          parse_mode: 'Markdown'
        }
      );
    }

    // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    const productButtons = products.map(product => [
      Markup.button.callback(
        `üõçÔ∏è ${product.name} ${product.reservedBy ? 'üîí' : '‚úÖ'}`, 
        `shop_product_${product.id}`
      )
    ]);
    
    productButtons.push([Markup.button.callback('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]);

    let messageText = `üõçÔ∏è **–ü–æ–∫—É–ø–∫–∞ Shop —Ç–æ–≤–∞—Ä–æ–≤**\n\n`;
    messageText += `üìù **–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏:**\n`;
    messageText += `‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ\n`;
    messageText += `‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª —Å –∞–Ω–∞–ª–∏–∑–æ–º –º–∞–≥–∞–∑–∏–Ω–æ–≤\n`;
    messageText += `‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç\n`;
    messageText += `‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏—Ç –≤–∞—à —Å–ø–∏—Å–æ–∫\n`;
    messageText += `‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "–¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω"\n\n`;
    
    messageText += `üìä **–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${products.length}**\n\n`;
    messageText += `–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:`;

    await ctx.editMessageText(messageText, {
      reply_markup: { inline_keyboard: productButtons },
      parse_mode: 'Markdown'
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ buy_shop:', error);
    await ctx.editMessageText(
      '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      { reply_markup: { inline_keyboard: [[{ text: 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }]] } }
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ Shop —Ç–æ–≤–∞—Ä–∞
bot.action(/shop_product_(\d+)/, async (ctx) => {
  try {
    const productId = parseInt(ctx.match[1]);
    const product = await Product.findByPk(productId);

    if (!product || !product.isAvailable) {
      return ctx.reply('‚ùå –¢–æ–≤–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    if (product.reservedBy && product.reservedBy !== ctx.user.telegramId) {
      return ctx.reply(`‚è∞ –¢–æ–≤–∞—Ä —É–∂–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º`);
    }

    // –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä
    const reserveUntil = new Date(Date.now() + 30 * 60 * 1000);
    await product.update({
      reservedBy: ctx.user.telegramId,
      reservedUntil: reserveUntil
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userStates.set(ctx.user.telegramId, {
      state: 'shop_file_sent',
      productId: productId,
      productCode: product.uniqueCode
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å –∞–Ω–∞–ª–∏–∑–æ–º
    try {
      // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ (—Å–∫—Ä—ã–≤–∞–µ–º –ª–æ–≥–∏–Ω—ã/–ø–∞—Ä–æ–ª–∏)
      let fileContent = '';
      let processedContent = '';
      
      try {
        fileContent = await fs.readFile(product.filePath, 'utf8');
        const processedLines = processFileLines(fileContent, true);
        processedContent = processedLines.join('\n');
      } catch (fileError) {
        console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Ç–æ–≤–∞—Ä–∞:', fileError);
        processedContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞';
      }

      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const tempFileName = `temp_${product.uniqueCode}_${Date.now()}.txt`;
      const tempFilePath = path.join(__dirname, 'temp', tempFileName);
      
      // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É temp –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      await fs.mkdir(path.join(__dirname, 'temp'), { recursive: true });
      await fs.writeFile(tempFilePath, processedContent, 'utf8');

      await ctx.replyWithDocument(
        { source: tempFilePath },
        {
          caption: `üõçÔ∏è **–ê–Ω–∞–ª–∏–∑ Shop —Ç–æ–≤–∞—Ä–∞: ${product.name}**\n\n` +
            `üìù **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n` +
            `1. –ò–∑—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –≤ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ\n` +
            `2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –±–æ—Ç—É\n` +
            `3. –ú–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å TXT —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç:\n` +
            `   \`—Å—Ç—Ä–æ–∫–∞1\`\n` +
            `   \`—Å—Ç—Ä–æ–∫–∞2\`\n` +
            `   \`—Å—Ç—Ä–æ–∫–∞3\`\n\n` +
            `‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –õ–æ–≥–∏–Ω—ã –∏ –ø–∞—Ä–æ–ª–∏ —Å–∫—Ä—ã—Ç—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n` +
            `üí∞ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–∞\n` +
            `‚è∞ **–†–µ–∑–µ—Ä–≤ –¥–æ:** ${reserveUntil.toLocaleString('ru-RU')}`,
          parse_mode: 'Markdown'
        }
      );

      // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      setTimeout(async () => {
        try {
          await fs.unlink(tempFilePath);
        } catch (cleanupError) {
          console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', cleanupError);
        }
      }, 5000);

      // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
      console.log(`üõçÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ Shop —Ç–æ–≤–∞—Ä–∞...`);
      await sendAdminNotification(ctx,
        `üõçÔ∏è –ó–ê–ü–†–û–° SHOP –¢–û–í–ê–†–ê\n\n` +
        `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${escapeMarkdown(ctx.user.username || ctx.user.firstName)}\n` +
        `üì± ID: ${ctx.user.telegramId}\n` +
        `üèÜ –°—Ç–∞—Ç—É—Å: ${ctx.user.status}\n\n` +
        `üì¶ –¢–æ–≤–∞—Ä: ${escapeMarkdown(product.name)}\n` +
        `üîó –ö–æ–¥: ${product.uniqueCode}\n` +
        `üìÅ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–ª–æ–≥–∏–Ω—ã/–ø–∞—Ä–æ–ª–∏ —Å–∫—Ä—ã—Ç—ã)\n` +
        `‚è∞ –†–µ–∑–µ—Ä–≤ –¥–æ: ${reserveUntil.toLocaleString('ru-RU')}`,
        {},
        true,
        ctx.user.telegramId
      );

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞:', error);
      await ctx.reply(
        '‚ùå **–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞**\n\n' +
        '–§–∞–π–ª –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
      );
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ Shop —Ç–æ–≤–∞—Ä–∞:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞');
  }
});

// ==================== ADMIN –¢–û–í–ê–†–´ ====================

bot.action('buy_admin', async (ctx) => {
  try {
    const products = await Product.findAll({
      where: { category: 'ADMIN', isAvailable: true },
      order: [['createdAt', 'DESC']]
    });

    if (products.length === 0) {
      return ctx.editMessageText(
        'üì≠ **–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Admin –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç**\n\n' +
        '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏—Ç –Ω–æ–≤—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏.',
        {
          reply_markup: { inline_keyboard: [[{ text: 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }]] },
          parse_mode: 'Markdown'
        }
      );
    }

    // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    const productButtons = products.map(product => [
      Markup.button.callback(
        `üì¶ ${product.name} ${product.reservedBy ? 'üîí' : '‚úÖ'}`, 
        `admin_product_${product.id}`
      )
    ]);
    
    productButtons.push([Markup.button.callback('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]);

    let messageText = `üë®‚Äçüíº **–ü–æ–∫—É–ø–∫–∞ Admin —Ç–æ–≤–∞—Ä–æ–≤**\n\n`;
    messageText += `üìù **–ù–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏:**\n`;
    messageText += `‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ\n`;
    messageText += `‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª —Å –∞–Ω–∞–ª–∏–∑–æ–º –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏\n`;
    messageText += `‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç\n`;
    messageText += `‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏—Ç –≤–∞—à —Å–ø–∏—Å–æ–∫\n`;
    messageText += `‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "–¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω"\n\n`;
    
    messageText += `üìä **–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${products.length}**\n\n`;
    messageText += `–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:`;

    await ctx.editMessageText(messageText, {
      reply_markup: { inline_keyboard: productButtons },
      parse_mode: 'Markdown'
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ buy_admin:', error);
    await ctx.editMessageText(
      '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      { reply_markup: { inline_keyboard: [[{ text: 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }]] } }
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ Admin —Ç–æ–≤–∞—Ä–∞
bot.action(/admin_product_(\d+)/, async (ctx) => {
  try {
    const productId = parseInt(ctx.match[1]);
    const product = await Product.findByPk(productId);

    if (!product || !product.isAvailable) {
      return ctx.reply('‚ùå –¢–æ–≤–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    if (product.reservedBy && product.reservedBy !== ctx.user.telegramId) {
      return ctx.reply(`‚è∞ –¢–æ–≤–∞—Ä —É–∂–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º`);
    }

    // –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä
    const reserveUntil = new Date(Date.now() + 30 * 60 * 1000);
    await product.update({
      reservedBy: ctx.user.telegramId,
      reservedUntil: reserveUntil
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userStates.set(ctx.user.telegramId, {
      state: 'admin_file_sent',
      productId: productId,
      productCode: product.uniqueCode
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å –∞–Ω–∞–ª–∏–∑–æ–º
    try {
      await ctx.replyWithDocument(
        { source: product.filePath },
        {
          caption: `üìä **–ê–Ω–∞–ª–∏–∑ Admin —Ç–æ–≤–∞—Ä–∞: ${product.name}**\n\n` +
            `üìù **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n` +
            `1. –ò–∑—É—á–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –≤ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ\n` +
            `2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ TXT —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤\n` +
            `3. –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø—Ä—è–º–æ –≤ —á–∞—Ç:\n` +
            `   \`site1.com\`\n` +
            `   \`site2.com\`\n` +
            `   \`site3.com\`\n\n` +
            `‚è∞ **–†–µ–∑–µ—Ä–≤ –¥–æ:** ${reserveUntil.toLocaleString('ru-RU')}`,
          parse_mode: 'Markdown'
        }
      );

      // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
      console.log(`üìä –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ Admin —Ç–æ–≤–∞—Ä–∞...`);
      await sendAdminNotification(ctx,
        `üìä –ó–ê–ü–†–û–° ADMIN –¢–û–í–ê–†–ê\n\n` +
        `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${escapeMarkdown(ctx.user.username || ctx.user.firstName)}\n` +
        `üì± ID: ${ctx.user.telegramId}\n` +
        `üèÜ –°—Ç–∞—Ç—É—Å: ${ctx.user.status}\n\n` +
        `üì¶ –¢–æ–≤–∞—Ä: ${escapeMarkdown(product.name)}\n` +
        `üîó –ö–æ–¥: ${product.uniqueCode}\n` +
        `üìÅ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n` +
        `‚è∞ –†–µ–∑–µ—Ä–≤ –¥–æ: ${reserveUntil.toLocaleString('ru-RU')}`,
        {},
        true,
        ctx.user.telegramId
      );

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞:', error);
      await ctx.reply(
        '‚ùå **–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞**\n\n' +
        '–§–∞–π–ª –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
      );
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ Admin —Ç–æ–≤–∞—Ä–∞:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞');
  }
});

// ==================== –û–ë–†–ê–ë–û–¢–ö–ê –§–ê–ô–õ–û–í –ò –¢–ï–ö–°–¢–ê ====================

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
bot.on('document', async (ctx) => {
  const userState = userStates.get(ctx.user.telegramId);
  
  if (userState && (userState.state === 'admin_file_sent' || userState.state === 'shop_file_sent')) {
    try {
      const fileExtension = ctx.message.document.file_name.split('.').pop().toLowerCase();
      
      if (fileExtension !== 'txt') {
        return ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .txt');
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
      const file = await ctx.telegram.getFile(ctx.message.document.file_id);
      const fileUrl = `https://api.telegram.org/file/bot${process.env.BOT_TOKEN}/${file.file_path}`;
      
      // –°–∫–∞—á–∏–≤–∞–µ–º –∏ —á–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤)
      const response = await fetch(fileUrl);
      const fileContent = await response.text();

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const isShop = userState.state === 'shop_file_sent';
      const category = isShop ? 'SHOP' : 'ADMIN';

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      userStates.set(ctx.user.telegramId, {
        ...userState,
        state: isShop ? 'shop_list_sent' : 'admin_list_sent',
        userList: fileContent,
        listType: 'file'
      });

      const purchaseMenu = Markup.inlineKeyboard([
        [Markup.button.callback('üí∞ –¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω', 'purchase_completed')],
        [Markup.button.callback('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
      ]);

      await ctx.reply(
        `‚úÖ **–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω!**\n\n` +
        `üìÑ **–§–∞–π–ª:** ${ctx.message.document.file_name}\n` +
        `üìä **–†–∞–∑–º–µ—Ä:** ${(ctx.message.document.file_size / 1024).toFixed(1)} KB\n\n` +
        `–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.\n\n` +
        `üí¨ **–ß—Ç–æ –¥–∞–ª—å—à–µ?**\n` +
        `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏.\n` +
        `–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ "üí∞ –¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω".`,
        { 
          ...purchaseMenu,
          parse_mode: 'Markdown' 
        }
      );

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞–º
      await sendListToAdmins(ctx, userState.productCode, fileContent, 'file', ctx.message.document.file_name, category);

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:', error);
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  }
});

// ==================== –û–ë–™–ï–î–ò–ù–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –¢–ï–ö–°–¢–ê ====================

bot.on('text', async (ctx) => {
  const text = ctx.message.text.trim();
  const userState = userStates.get(ctx.user.telegramId);

  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã - –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
  if (text.startsWith('/')) {
    console.log(`‚ö° –ö–æ–º–∞–Ω–¥–∞ ${text} –ø—Ä–æ–ø—É—â–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º —Ç–µ–∫—Å—Ç–∞`);
    return;
  }

  console.log(`üìù –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç ${ctx.user.telegramId}: "${text}"`);
  console.log(`üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, userState);

  // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ Shop —Å–ø–∏—Å–∫–∞ (–Ω–æ–≤—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
  if (userState && userState.state === 'shop_file_sent') {
    console.log(`üõçÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è Shop —Å–ø–∏—Å–∫–∞ –æ—Ç ${ctx.user.telegramId}`);
    
    // –õ—é–±–æ–π —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —ç—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–ø–∏—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–æ–≤
    userStates.set(ctx.user.telegramId, {
      ...userState,
      state: 'shop_list_sent',
      userList: text,
      listType: 'text'
    });

    const purchaseMenu = Markup.inlineKeyboard([
      [Markup.button.callback('üí∞ –¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω', 'purchase_completed')],
      [Markup.button.callback('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
    ]);

    await ctx.reply(
      `‚úÖ **–°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω!**\n\n` +
      `üìù **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:** ${text.split('\n').filter(line => line.trim()).length}\n\n` +
      `–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.\n\n` +
      `üí¨ **–ß—Ç–æ –¥–∞–ª—å—à–µ?**\n` +
      `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏.\n` +
      `–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ "üí∞ –¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω".`,
      { 
        ...purchaseMenu,
        parse_mode: 'Markdown' 
      }
    );

    await sendListToAdmins(ctx, userState.productCode, text, 'text', null, 'SHOP');
    return;
  }

  // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ Admin —Å–ø–∏—Å–∫–∞
  if (userState && userState.state === 'admin_file_sent') {
    const lines = text.split('\n').filter(line => line.trim());
    const domainPattern = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$/;
    
    if (lines.length > 0 && lines.some(line => domainPattern.test(line.trim()))) {
      console.log(`üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –æ—Ç ${ctx.user.telegramId}`);
      
      userStates.set(ctx.user.telegramId, {
        ...userState,
        state: 'admin_list_sent',
        userList: text,
        listType: 'text'
      });

      const purchaseMenu = Markup.inlineKeyboard([
        [Markup.button.callback('üí∞ –¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω', 'purchase_completed')],
        [Markup.button.callback('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
      ]);

      await ctx.reply(
        `‚úÖ **–°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω!**\n\n` +
        `üìù **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:** ${lines.length}\n\n` +
        `–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.\n\n` +
        `üí¨ **–ß—Ç–æ –¥–∞–ª—å—à–µ?**\n` +
        `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏.\n` +
        `–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ "üí∞ –¢–æ–≤–∞—Ä –∫—É–ø–ª–µ–Ω".`,
        { 
          ...purchaseMenu,
          parse_mode: 'Markdown' 
        }
      );

      await sendListToAdmins(ctx, userState.productCode, text, 'text', null, 'ADMIN');
      return;
    }
  }

  // 3. –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
  console.log(`‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.user.telegramId}`);
  const helpMainMenu = await createMainMenu(ctx.user.telegramId);
  await ctx.reply(
    `‚ÑπÔ∏è **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n\n` +
    `/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n` +
    `/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n` +
    `**–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:**\n` +
    `‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ä–∞–∑–¥–µ–ª–∞—Ö Shop/Admin\n` +
    `‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫\n` +
    `‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–ø–∏—Å–∫–∏ –∏–ª–∏ —Ñ–∞–π–ª—ã –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ\n\n` +
    `**–ù–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏ –±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π!**`,
    { 
      ...helpMainMenu,
      parse_mode: 'Markdown'
    }
  );
});

// ==================== –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ü–û–ö–£–ü–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú ====================

bot.action('purchase_completed', async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤–æ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏
    const hasActiveReservation = await Product.findOne({
      where: {
        reservedBy: ctx.user.telegramId,
        reservedUntil: { [require('sequelize').Op.gt]: new Date() }
      }
    });

    const hasPendingPurchase = await Purchase.findOne({
      where: {
        userId: ctx.user.telegramId,
        status: 'pending'
      }
    });

    const userState = userStates.get(ctx.user.telegramId);
    const hasAdminProcess = userState && (userState.state === 'admin_list_sent' || userState.state === 'admin_file_sent');
    const hasShopProcess = userState && (userState.state === 'shop_list_sent' || userState.state === 'shop_file_sent');

    if (!hasActiveReservation && !hasPendingPurchase && !hasAdminProcess && !hasShopProcess) {
      return ctx.reply(
        `‚ùå **–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫**\n\n` +
        `–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–æ–≤ –∏–ª–∏ –ø–æ–∫—É–ø–æ–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n` +
        `–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä—É–π—Ç–µ —Ç–æ–≤–∞—Ä.`,
        { parse_mode: 'Markdown' }
      );
    }

    await ctx.reply(
      `‚è≥ **–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞**\n\n` +
      `–í–∞—à–∞ –ø–æ–∫—É–ø–∫–∞ –±—É–¥–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏.\n` +
      `–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π.\n\n` +
      `üí° **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ—á–Ω—É—é —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏.`,
      { parse_mode: 'Markdown' }
    );
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É" –∞–¥–º–∏–Ω–æ–º
bot.action(/confirm_purchase_(\d+)/, async (ctx) => {
  const adminIds = process.env.ADMIN_IDS.split(',').map(id => parseInt(id));
  if (!adminIds.includes(ctx.from.id)) {
    return ctx.answerCbQuery('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
  }

  const buyerId = parseInt(ctx.match[1]);
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const buyer = await User.findOne({ where: { telegramId: buyerId } });
    
    if (!buyer) {
      return ctx.answerCbQuery(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${buyerId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å—É–º–º—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
    adminStates.set(ctx.from.id, {
      state: 'waiting_purchase_amount',
      buyerId: buyerId,
      buyerName: buyer.username || buyer.firstName
    });

    await ctx.answerCbQuery('‚úÖ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø—Ä–æ–¥–∞–∂–∏');
    await ctx.reply(
      `üí∞ **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏**\n\n` +
      `üë§ **–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:** @${buyer.username || buyer.firstName} (ID: ${buyerId})\n\n` +
      `–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø—Ä–æ–¥–∞–∂–∏ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö.\n` +
      `–ù–∞–ø—Ä–∏–º–µ—Ä: \`500\` –∏–ª–∏ \`1250.50\``,
      { parse_mode: 'Markdown' }
    );

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏:', error);
    await ctx.answerCbQuery('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// ==================== –î–†–£–ì–ò–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ====================

bot.action('buy_authors', async (ctx) => {
  await ctx.editMessageText(
    `‚úçÔ∏è **–ü–æ–∫—É–ø–∫–∞ Authors**\n\n` +
    `üìù **–û–ø–∏—Å–∞–Ω–∏–µ:**\n` +
    `–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –Ω–∞—Ä–∞–±–æ—Ç–∫–∏ –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.\n\n` +
    `üîß **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...**\n` +
    `–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.`,
    {
      reply_markup: { inline_keyboard: [[{ text: 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }]] },
      parse_mode: 'Markdown'
    }
  );
});

bot.action('seo_menu', async (ctx) => {
  const seoMenu = Markup.inlineKeyboard([
    [Markup.button.callback('üë®‚Äçüíº Admin SEO', 'buy_admin_seo')],
    [Markup.button.callback('‚úçÔ∏è Authors SEO', 'buy_authors_seo')],
    [Markup.button.callback('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
  ]);

  await ctx.editMessageText(
    'üìà **–ü–æ–∫—É–ø–∫–∏ SEO**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
    {
      ...seoMenu,
      parse_mode: 'Markdown'
    }
  );
});

bot.action('buy_admin_seo', async (ctx) => {
  await ctx.editMessageText(
    `üë®‚Äçüíº **Admin SEO**\n\n` +
    `üìù **–û–ø–∏—Å–∞–Ω–∏–µ:**\n` +
    `SEO –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π.\n\n` +
    `üîß **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...**`,
    {
      reply_markup: { inline_keyboard: [[{ text: 'üîô SEO –º–µ–Ω—é', callback_data: 'seo_menu' }]] },
      parse_mode: 'Markdown'
    }
  );
});

bot.action('buy_authors_seo', async (ctx) => {
  await ctx.editMessageText(
    `‚úçÔ∏è **Authors SEO**\n\n` +
    `üìù **–û–ø–∏—Å–∞–Ω–∏–µ:**\n` +
    `–ê–≤—Ç–æ—Ä—Å–∫–∏–µ SEO —Ä–µ—à–µ–Ω–∏—è –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è.\n\n` +
    `üîß **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...**`,
    {
      reply_markup: { inline_keyboard: [[{ text: 'üîô SEO –º–µ–Ω—é', callback_data: 'seo_menu' }]] },
      parse_mode: 'Markdown'
    }
  );
});

bot.action('profile', async (ctx) => {
  try {
    const purchases = await Purchase.findAll({
      where: { userId: ctx.user.telegramId, status: 'confirmed' },
      include: [Product]
    });

    const statusProgress = getStatusProgress(ctx.user.weeklySpent || 0);

    let profileText = `üë§ **–í–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç**\n\n`;
    profileText += `üèÜ –°—Ç–∞—Ç—É—Å: **${ctx.user.status}**\n`;
    profileText += `üí∞ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é: **$${ctx.user.weeklySpent || 0}**\n`;
    profileText += `üíé –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: **$${ctx.user.totalSpent || 0}**\n`;
    profileText += `üõí –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: **${purchases.length}**\n\n`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    if (statusProgress.next) {
      const progressBar = '‚ñì'.repeat(Math.floor(statusProgress.progress / 10)) + 
                         '‚ñë'.repeat(10 - Math.floor(statusProgress.progress / 10));
      profileText += `üìà **–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ ${statusProgress.next}:**\n`;
      profileText += `[${progressBar}] ${statusProgress.progress}%\n`;
      profileText += `üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å: $${statusProgress.needed}\n\n`;
    } else {
      profileText += `üëë **–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞!**\n\n`;
    }
    
    profileText += `üìä **–°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤:**\n`;
    profileText += `‚Ä¢ **–ü—ã–ª—å** - –¥–æ $2000 –≤ –Ω–µ–¥–µ–ª—é\n`;
    profileText += `‚Ä¢ **VIP** - $2000+ –≤ –Ω–µ–¥–µ–ª—é\n`;
    profileText += `‚Ä¢ **INFINITY** - $8000+ –≤ –Ω–µ–¥–µ–ª—é (–º–∞–∫—Å–∏–º—É–º)\n\n`;

    if (purchases.length > 0) {
      profileText += `üì¶ **–í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏:**\n`;
      purchases.slice(0, 5).forEach(p => {
        profileText += `‚Ä¢ ${p.Product.name} - ${p.amount}\n`;
      });
      if (purchases.length > 5) {
        profileText += `... –∏ –µ—â–µ ${purchases.length - 5} –ø–æ–∫—É–ø–æ–∫\n`;
      }
    } else {
      profileText += `üì¶ **–ü–æ–∫—É–ø–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç**\n`;
      profileText += `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤.`;
    }

    const profileMenu = await createMainMenu(ctx.user.telegramId);
    await ctx.editMessageText(profileText, {
      ...profileMenu,
      parse_mode: 'Markdown'
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è:', error);
    if (error.description && error.description.includes('message is not modified')) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –Ω–µ–∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      return;
    }
    try {
      const errorMenu = await createMainMenu(ctx.user.telegramId);
      await ctx.editMessageText(
        '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è',
        errorMenu
      );
    } catch (editError) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è');
    }
  }
});

bot.action('support', async (ctx) => {
  try {
    let supportText = `üÜò **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞**\n\n`;
    supportText += `–î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n\n`;
    supportText += `üë®‚Äçüíº **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** @chubakabezshersti\n\n`;
    supportText += `üìû –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n`;
    supportText += `üïê –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: –æ–±—ã—á–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.`;

    // –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
    const supportMenu = Markup.inlineKeyboard([
      [Markup.button.callback('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
    ]);
    
    try {
      await ctx.editMessageText(supportText, {
        ...supportMenu,
        parse_mode: 'Markdown'
      });
    } catch (error) {
      if (error.description && error.description.includes('message is not modified')) {
        // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        await ctx.reply(supportText, {
          ...supportMenu,
          parse_mode: 'Markdown'
        });
        return;
      }
      
      // –ï—Å–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ —Å Markdown, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å Markdown:', error);
      try {
        const plainText = `üÜò –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ü–û–î–î–ï–†–ñ–ö–ê\n\n` +
          `–î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n\n` +
          `üë®‚Äçüíº –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @chubakabezshersti\n\n` +
          `üìû –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n` +
          `üïê –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: –æ–±—ã—á–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.`;
          
        await ctx.editMessageText(plainText, supportMenu);
      } catch (finalError) {
        // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply('üÜò –î–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–∞–ø–∏—à–∏—Ç–µ: @chubakabezshersti', supportMenu);
      }
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ support:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ù–∞–ø–∏—à–∏—Ç–µ: @chubakabezshersti');
  }
});

// ==================== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–¶–ï–°–°–´ ====================

setInterval(async () => {
  try {
    const expiredReservations = await Product.findAll({
      where: {
        reservedBy: { [require('sequelize').Op.not]: null },
        reservedUntil: { [require('sequelize').Op.lt]: new Date() }
      }
    });

    for (const product of expiredReservations) {
      await product.update({
        reservedBy: null,
        reservedUntil: null
      });
      console.log(`‚è∞ –°–Ω—è—Ç —Ä–µ–∑–µ—Ä–≤ —Å —Ç–æ–≤–∞—Ä–∞ ${product.uniqueCode}`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–Ω—è—Ç–∏—è —Ä–µ–∑–µ—Ä–≤–∞:', error);
  }
}, 60000);

// ==================== –ó–ê–ü–£–°–ö –ë–û–¢–ê ====================

async function startBot() {
  try {
    console.log('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');
    
    await syncModels();
    
    await bot.launch();
    console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
    console.log(`üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞: http://localhost:${process.env.ADMIN_PANEL_PORT || 3001}`);
    console.log(`üîó –ë–æ—Ç: @${(await bot.telegram.getMe()).username}`);
    console.log(`üë®‚Äçüíº –ê–¥–º–∏–Ω—ã: ${process.env.ADMIN_IDS}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
    process.exit(1);
  }
}

process.once('SIGINT', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  bot.stop('SIGINT');
});

process.once('SIGTERM', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  bot.stop('SIGTERM');
});

module.exports = { bot, createMainMenu };

if (require.main === module) {
  startBot();
}